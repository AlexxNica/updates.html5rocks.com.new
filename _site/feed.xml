<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HtML5 Rocks - Chrome updates</title>
    <description>&quot;Html5 Rocks updates stream.&quot;
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 30 Sep 2014 12:07:02 +0100</pubDate>
    <lastBuildDate>Tue, 30 Sep 2014 12:07:02 +0100</lastBuildDate>
    <generator>Jekyll v2.3.0</generator>
    
      <item>
        <title>Precision Touch for Precise Gestures</title>
        <description>&lt;p&gt;A &lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=323935&quot;&gt;change landed&lt;/a&gt; in
the implementation of Chrome’s &lt;a href=&quot;https://dvcs.w3.org/hg/webevents/raw-file/v1-errata/touchevents.html#attributes&quot;&gt;TouchEvents&lt;/a&gt;
as of M37 (stable in 08/2014), which alters the reported co-ordinates to floats
instead of integers.&lt;/p&gt;

&lt;table style=&quot;font-family: monospace; &quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;padding-right: 24px;&quot;&gt;Before&lt;/th&gt;
&lt;th&gt;After&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;padding-right: 24px;&quot;&gt;
clientX: 167&lt;br /&gt;
clientY: 196&lt;br /&gt;
pageX: &amp;nbsp;&amp;nbsp;167&lt;br /&gt;
pageY: &amp;nbsp;&amp;nbsp;196&lt;br /&gt;
radiusX: 26&lt;br /&gt;
radiusY: 26&lt;br /&gt;
screenX: 167&lt;br /&gt;
screenY: 277&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;
clientX: 167.33299255371094&lt;br /&gt;
clientY: 195.66700744628906&lt;br /&gt;
pageX: &amp;nbsp;&amp;nbsp;167.33299255371094&lt;br /&gt;
pageY: &amp;nbsp;&amp;nbsp;195.66700744628906&lt;br /&gt;
radiusX: 25.843116760253906&lt;br /&gt;
radiusY: 25.843116760253906&lt;br /&gt;
screenX: 167.33334350585938&lt;br /&gt;
screenY: 276.66668701171875
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The result of this change means you have a smoother response to the users
gestures as it gives you higher accuracy of the fingers position.&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&quot;http://www.rbyers.net/paint.html#points%20&quot;&gt;Rick Byers’ demo&lt;/a&gt;, you can
see what a huge difference this can make when slowly drawing a swirl.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://drive.google.com/uc?export=view&amp;amp;id=0B55F0MBQPca4V2dkdXdlRUVlQjQ&quot; alt=&quot;Differences in Touch Events&quot; style=&quot;max-width: 600px; width: 100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will only make affect screens which have a pixel density greater than 1. To
understand why, let’s step through an example.&lt;/p&gt;

&lt;p&gt;Imagine you have a 3x3 grid of &lt;strong&gt;CSS pixels&lt;/strong&gt; and the screen density is 3,
meaning we have a grid of 9x9 &lt;strong&gt;physical pixels&lt;/strong&gt; and the user gestures from the
top left to the bottom right.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://drive.google.com/uc?export=view&amp;amp;id=0B55F0MBQPca4WDEzalBaRmMzUHM&quot; alt=&quot;CSS Pixel and Screen Pixel Grid&quot; style=&quot;max-width: 600px; width: 100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Originally, we were rounding the touches position to the nearest CSS pixel,
which meant in this gesture you would end up with the following steps.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://drive.google.com/uc?export=view&amp;amp;id=0B55F0MBQPca4YkZlVEhwQ24wX28&quot; alt=&quot;CSS Pixel Precision During Gesture&quot; style=&quot;max-width: 600px; width: 100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We miss out on drawing any of the intermediate steps that the physical pixels
could show as the user moves their finger.&lt;/p&gt;

&lt;p&gt;Now that we’ve switched to floats, our gesture can look like this.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://drive.google.com/uc?export=view&amp;amp;id=0B55F0MBQPca4MGdDS1VvVEpfZjQ&quot; alt=&quot;Float Precision During Gesture&quot; style=&quot;max-width: 600px; width: 100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In most cases, this won’t require any changes in your code, but does mean any
animations or movements you do as a result of TouchEvents, will be smoother,
especially for slow gestures.&lt;/p&gt;

&lt;p&gt;There is also plan to bring this improvement to mobile Safari as well: &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=133180&quot;&gt;https://bugs.webkit.org/show_bug.cgi?id=133180&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Sep 2014 00:00:00 +0100</pubDate>
        <link>/2014/09/Precision-Touch-for-Precise-Gestures</link>
        <guid isPermaLink="true">/2014/09/Precision-Touch-for-Precise-Gestures</guid>
        
        <category>TouchEvents</category>
        
        
      </item>
    
      <item>
        <title>Easier ArrayBuffer &lt;-&gt; String conversion with the Encoding API</title>
        <description>&lt;p&gt;Over two years ago, &lt;a href=&quot;http://www.html5rocks.com/en/profiles/#renatomangini&quot;&gt;Renato Mangini&lt;/a&gt; described a &lt;a href=&quot;http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String&quot;&gt;method&lt;/a&gt; for converting between raw &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffers&lt;/a&gt; and the corresponding string representation of that data. At the end of the post, Renato mentioned that an official standardized API to handle the conversion was in the process of being drafted. The &lt;a href=&quot;http://encoding.spec.whatwg.org/&quot;&gt;specification&lt;/a&gt; has now matured, and both &lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/18&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;http://www.chromestatus.com/feature/5714368087982080&quot;&gt;Google Chrome&lt;/a&gt; have added native support for the &lt;a href=&quot;http://encoding.spec.whatwg.org/#interface-textdecoder&quot;&gt;TextDecoder&lt;/a&gt; and &lt;a href=&quot;http://encoding.spec.whatwg.org/#interface-textencoder&quot;&gt;TextEncoder&lt;/a&gt; interfaces.&lt;/p&gt;

&lt;p&gt;As demonstrated by &lt;a href=&quot;https://googlechrome.github.io/samples/encoding-api/index.html&quot;&gt;this live sample&lt;/a&gt;, excerpted below, the &lt;a href=&quot;http://encoding.spec.whatwg.org/&quot;&gt;Encoding API&lt;/a&gt; makes it simple to translate between raw bytes and native JavaScript strings, regardless of which of the many standard encodings you need to work with.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;results&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;TextDecoder&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The local files to be fetched, mapped to the encoding that they&amp;#39;re using.&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filesToEncoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf8.bin&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf16le.bin&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf-16le&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;macintosh.bin&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;macintosh&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filesToEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;fetchAndDecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filesToEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#results&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Your browser does not support the Encoding API.&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Use XHR to fetch `file` and interpret its contents as being encoded with `encoding`.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchAndDecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Using &amp;#39;arraybuffer&amp;#39; as the responseType ensures that the raw data is returned,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// rather than letting XMLHttpRequest decode the data first.&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;arraybuffer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// The decode() method takes a DataView as a parameter, which is a wrapper on top of the ArrayBuffer.&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DataView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// The TextDecoder interface is documented at http://encoding.spec.whatwg.org/#interface-textdecoder&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Add the decoded file&amp;#39;s text to the &amp;lt;pre&amp;gt; element on the page.&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#results&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Error while requesting&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The sample above uses feature detection to determine whether the required &lt;code&gt;TextDecoder&lt;/code&gt; interface is available in the current browser, and displays an error message if it’s not. In a real application, you would normally want to fall back on an alternative implementation if native support isn’t available. Fortunately, the &lt;a href=&quot;https://github.com/inexorabletash/text-encoding&quot;&gt;text-encoding library&lt;/a&gt; that Renato mentioned in his original article is still a good choice. The library uses the native methods on browsers that support them, and offers polyfills for the Encoding API on browsers that haven’t yet added support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update, September 2014&lt;/strong&gt;: Modified the sample to illustrate checking whether the Encoding API is available in the current browser.&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Aug 2014 00:00:00 +0100</pubDate>
        <link>/2014/08/Easier-ArrayBuffer---String-conversion-with-the-Encoding-API</link>
        <guid isPermaLink="true">/2014/08/Easier-ArrayBuffer---String-conversion-with-the-Encoding-API</guid>
        
        <category>ArrayBuffer</category>
        
        <category>decoding</category>
        
        <category>strings</category>
        
        <category>Unicode</category>
        
        <category>encoding</category>
        
        
      </item>
    
      <item>
        <title>Collecting and Iterating, the ES6 Way</title>
        <description>&lt;p&gt;The &lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript&quot;&gt;ECMAScript&lt;/a&gt; 6 specification, while still in &lt;a href=&quot;http://people.mozilla.org/~jorendorff/es6-draft.html&quot;&gt;draft form&lt;/a&gt;, brings the promise of many exciting new tools to add to the JavaScript programmer’s belt. New classes such as &lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-set-objects&quot;&gt;Set&lt;/a&gt; and &lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects&quot;&gt;Map&lt;/a&gt; offer native solutions to working with specific types of collections, and the &lt;a href=&quot;https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iteration-statements&quot;&gt;for…of&lt;/a&gt; statement provides an elegant alternative to traditional ways of iterating over data.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Set&lt;/code&gt;s offer a way of keeping track of a collection of items in which each item can appear at most once. &lt;code&gt;Map&lt;/code&gt;s offer more functionality than was previously possible by using &lt;code&gt;Object&lt;/code&gt;s to associate keys with values—with a &lt;code&gt;Map&lt;/code&gt;, your keys don’t have to be strings, and you don’t have to worry about accidentally choosing a key name that clashes with an &lt;code&gt;Object&lt;/code&gt;’s method names. Lookup operations on native &lt;code&gt;Map&lt;/code&gt;s and &lt;code&gt;Set&lt;/code&gt;s are done in &lt;a href=&quot;http://en.wikipedia.org/wiki/Time_complexity#Constant_time&quot;&gt;constant time&lt;/a&gt;, which offers efficiency gains over what’s possible with simulated implementations.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://googlechrome.github.io/samples/collections-iterators-es6/index.html&quot;&gt;following sample&lt;/a&gt; demonstrates constructing a &lt;code&gt;Set&lt;/code&gt;, and using &lt;code&gt;for...of&lt;/code&gt; to iterate over its elements:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;log&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#log&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Creating, using, and iterating over a Set:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomIntegers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Generate a random integer in the range [1..10] five times,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// and use a Set to keep track of the distinct integers that were generated.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;randomIntegers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;randomIntegers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; distinct integers were generated.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;The number 10 was &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomIntegers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;not &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;one of them.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Here\&amp;#39;s all of them:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Use for...of to iterate over the items in the Set.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iteration-statements&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// The Set iterator yields a single value corresponding to each entry in the Set.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomIntegers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here’s a &lt;a href=&quot;https://googlechrome.github.io/samples/collections-iterators-es6/index.html&quot;&gt;corresponding sample&lt;/a&gt; that illustrates using and iterating over a &lt;code&gt;Map&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;\nCreating and iterating over a Map:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Maps can be initialized by passing in an iterable value (https://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-iterable)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Here, we use an Array of Arrays to initialize. The first value in each sub-Array is the new&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Map entry&amp;#39;s key, and the second is the item&amp;#39;s value.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;typesOfKeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;My key is a string.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;My key is also a string&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;My key is a number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#log&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;My key is an object&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// You can also call set() to add new keys/values to an existing Map.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;typesOfKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;!!!!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;My key is excited!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Use for...of to iterate over the items in the Map.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iteration-statements&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// There are several types of Map iterators available.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// typesOfKeys.keys() can be used to iterate over just the keys:&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Just the keys:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;typesOfKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;  key: &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// typesOfKeys.values() can be used to iterate over just the values:&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Just the values:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;typesOfKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;  value: &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// The default Map iterator yields an Array with two items; the first is the Map entry&amp;#39;s key and the&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// second is the Map entry&amp;#39;s value. This default iterator is equivalent to typesOfKeys.entries().&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Keys and values:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Alternative, ES6-idiomatic syntax currently supported in Safari &amp;amp; Firefox:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// for (var [key, value] of typesOfKeys) { … }&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;typesOfKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;  &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; -&amp;gt; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Some browsers, like &lt;a href=&quot;http://www.chromestatus.com/feature/4818609708728320&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/dn263029&quot;&gt;Internet Explorer&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;Firefox&lt;/a&gt; have already added support for &lt;code&gt;Set&lt;/code&gt;s and &lt;code&gt;Map&lt;/code&gt;s. Native support complemented by polyfill libraries like &lt;a href=&quot;https://github.com/WebReflection/es6-collections&quot;&gt;es6-collections&lt;/a&gt; or &lt;a href=&quot;https://github.com/paulmillr/es6-shim/&quot;&gt;es6-shim&lt;/a&gt; means that JavaScript developers can start building with these new collection types today. There are no polyfills available for the &lt;code&gt;for...of&lt;/code&gt; statement (though it is possible to transpile support via &lt;a href=&quot;https://github.com/google/traceur-compiler&quot;&gt;Traceur&lt;/a&gt;), but native support is available today in &lt;a href=&quot;http://www.chromestatus.com/feature/4696563918045184&quot;&gt;Chrome&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;Firefox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update, September 2014&lt;/strong&gt;: Linked to an additional polyfill option, &lt;a href=&quot;https://github.com/paulmillr/es6-shim/&quot;&gt;es6-shim&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Aug 2014 00:00:00 +0100</pubDate>
        <link>/2014/08/Collecting-and-Iterating-the-ES6-Way</link>
        <guid isPermaLink="true">/2014/08/Collecting-and-Iterating-the-ES6-Way</guid>
        
        <category>iterators</category>
        
        <category>ES6</category>
        
        <category>sets</category>
        
        <category>collections</category>
        
        <category>maps</category>
        
        
      </item>
    
      <item>
        <title>Web Audio Changes in m36</title>
        <description>&lt;h2 id=&quot;web-audio-changes&quot;&gt;Web Audio changes&lt;/h2&gt;

&lt;p&gt;At Google, we love standards.  We’re on a mission to build out the standards-defined Web platform.  One of the small warts on that for some time has been the webkit- prefixed implementation of the Web Audio API (notably the webkitAudioContext object), and some of the deprecated bits of Web Audio that we’ve continued to support.&lt;/p&gt;

&lt;p&gt;It was originally planned that m36 would remove support for the prefixed webkitAudioContext, since we had begun supporting the unprefixed AudioContext object. This turned out to be more troublesome than expected, so m36 supports both unprefixed and prefixed - however, even in the reintroduced webkitAudioContext, several legacy methods and attributes like createGainNode and createJavaScriptNode have been removed. In short, in m36 webkitAudioContext and AudioContext are aliases of each other; there is no difference in functionality between the two.&lt;/p&gt;

&lt;p&gt;We will remove the support for the prefix completely after m36, likely in a couple of releases. We’ll make an announcement here when the change is imminent, and we are continuing to reach out to authors to fix their Web Audio applications.&lt;/p&gt;

&lt;p&gt;Why have we done this, rather than reverting to the previous implementation?  Well, in part, we’ve been reticent to move too far backwards; we’ve already removed those APIs, and as a nice side-effect to this aliasing, applications can then work nicely on Firefox, which has never supported a prefixed AudioContext object (and quite right, too!) in their Web Audio support initially released last fall.&lt;/p&gt;

&lt;p&gt;The rest of this update provides a guide to fixing things that may be broken in your code due to this change.  The great thing about fixing these problems is that your code is then quite likely to just work in Firefox, too!  (I’d thought for a long time that my Vocoder application was broken due to Firefox’s implementation, but it turned out to be one of these problems!)&lt;/p&gt;

&lt;p&gt;If you just want to get up and running, you may want to take a look at a &lt;a href=&quot;http://en.wikipedia.org/wiki/Monkey_patch&quot;&gt;monkey-patch&lt;/a&gt; &lt;a href=&quot;https://github.com/cwilso/webkitAudioContext-MonkeyPatch&quot;&gt;library I wrote for applications that were written to the old Web Audio code&lt;/a&gt; - this can help you get up and running in a minimum amount of time, as it will alias the objects and methods appropriately.  Indeed, the patches the library lists is a good guide to the things that have changed.&lt;/p&gt;

&lt;h2 id=&quot;first-and-foremost&quot;&gt;First and foremost:&lt;/h2&gt;
&lt;p&gt;Any references to &lt;code&gt;window.webkitAudioContext&lt;/code&gt; should be made to &lt;code&gt;window.AudioContext&lt;/code&gt; instead.  Frequently, this has been fixed with a simple:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AudioContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AudioContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitAudioContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If your app is responding with something like “Unfortunately, your browser does not support Web Audio.  Please use Chrome or Safari.” - it’s quite likely explicitly looking for &lt;code&gt;webkitAudioContext&lt;/code&gt;.  Bad developer!  You could have been supporting Firefox for months!&lt;/p&gt;

&lt;p&gt;But there are a few other, more subtle code removals, some of which can be less obvious.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The BiquadFilter enumerated type constants for the &lt;code&gt;.type&lt;/code&gt; attribute (which is now a string) no longer appear on the &lt;code&gt;BiquadFilterNode&lt;/code&gt; object, and we do not support them on the &lt;code&gt;.type&lt;/code&gt; attribute.  So you don’t use &lt;code&gt;.LOWPASS&lt;/code&gt; (or 0) anymore - you set it to “lowpass”.&lt;/li&gt;
  &lt;li&gt;Also, the &lt;code&gt;Oscillator.type&lt;/code&gt; attribute is similarly now a string enumerated type - no more &lt;code&gt;.SAWTOOTH&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PannerNode.type&lt;/code&gt; is also now a string enumerated type.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PannerNode.distanceModel&lt;/code&gt; is also now a string enumerated type.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;createGainNode&lt;/code&gt; was renamed to &lt;code&gt;createGain&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;createDelayNode&lt;/code&gt; was renamed to &lt;code&gt;createDelay&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;createJavaScriptNode&lt;/code&gt; was renamed to &lt;code&gt;createScriptProcessor&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioBufferSourceNode.noteOn()&lt;/code&gt; is now replaced by &lt;code&gt;start()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioBufferSourceNode.noteGrainOn()&lt;/code&gt; is also now replaced by &lt;code&gt;start()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioBufferSourceNode.noteOff()&lt;/code&gt; is renamed to &lt;code&gt;stop()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;OscillatorNode.noteOn()&lt;/code&gt; is renamed to &lt;code&gt;start()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;OscillatorNode.noteOff()&lt;/code&gt; is renamed to &lt;code&gt;stop()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioParam.setTargetValueAtTime()&lt;/code&gt; is renamed to &lt;code&gt;setTargetAtTime()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioContext.createWaveTable()&lt;/code&gt; and &lt;code&gt;OscillatorNode.setWaveTable()&lt;/code&gt; are now renamed &lt;code&gt;createPeriodicWave() and &lt;/code&gt;setPeriodicWave()`.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioBufferSourceNode.looping&lt;/code&gt; was removed, in favor of &lt;code&gt;.loop&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AudioContext.createBuffer(ArrayBuffer, boolean)&lt;/code&gt; to synchronously decode a blob of encoded audio  data has been removed.  Synchronous calls that take a long time to complete are poor coding practice; use the asynchronous decodeAudioData call instead.  This is one of the more challenging changes - you need to actually change logic flow - but a far better practice.  Mozilla’s Ehsan Angkari wrote a nice &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Porting_webkitAudioContext_code_to_standards_based_AudioContext#Removal_of_the_synchronous_AudioContext.createBuffer_method&quot;&gt;example&lt;/a&gt; of how to do this in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Porting_webkitAudioContext_code_to_standards_based_AudioContext&quot;&gt;their post on converting to standard Web Audio&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many of these (like the renaming of createGainNode, and the removal of the synchronous decoding in createBuffer) will obviously show up in the developer tools console as an error - however, some others, like this usage:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;myFilterNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFilterNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BANDPASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;will not show up at all, and silently fail (myFilterNode.BANDPASS will now resolve to undefined, and the attempt to set .type to undefined will simply fail to produce any effect. This, by the way, was what was causing the vocoder to fail.)  Likewise, just assigning the filter.type to a number used to work:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;myFilterNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But now, you need to use the string enumeration:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;myFilterNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bandpass&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So, you may wish to grep your code for the following terms:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;webkitAudioContext&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.LOWPASS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.HIGHPASS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.BANDPASS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.LOWSHELF&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.HIGHSHELF&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.PEAKING&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.NOTCH&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.ALLPASS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.SINE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.SQUARE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.SAWTOOTH&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.TRIANGLE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.noteOn&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.noteGrainOn&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.noteOff&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.setWaveTable&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.createWaveTable&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.looping&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.EQUALPOWER&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.HRTF&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.LINEAR&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.INVERSE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.EXPONENTIAL&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;createGainNode&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;createDelayNode&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.type&lt;/code&gt; (yes, this will have lots of false positives - but it’s the only way to catch the last example above!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once more, if you’re in a hurry and want to get up and running, just grab a copy of &lt;a href=&quot;https://github.com/cwilso/webkitAudioContext-MonkeyPatch&quot;&gt;my monkeypatch webkitAudioContext library&lt;/a&gt; and include it in your application.  Happy Audio Hacking!&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Jul 2014 00:00:00 +0100</pubDate>
        <link>/2014/07/Web-Audio-Changes-in-m36</link>
        <guid isPermaLink="true">/2014/07/Web-Audio-Changes-in-m36</guid>
        
        <category>webaudio</category>
        
        
      </item>
    
      <item>
        <title>dialog element: shipped in Chrome 37 Beta</title>
        <description>&lt;p&gt;Chrome Beta has landed its native support for &amp;lt;dialog&amp;gt; element without needing “Enable experimental Web Platform features.” flag turned on.&lt;/p&gt;

&lt;div class=&quot;highlight-module highlight-module--code highlight-module--right&quot;&gt;
    &lt;div class=&quot;highlight-module__container&quot;&gt;
      &lt;code class=&quot;html&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This button will open a native &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;dialog&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; element: &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;show&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Open Dialog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dialog&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Here&amp;#39;s the dialog with default styles!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You can modify the styles if you wish.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;close&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Close&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dialog&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dialog&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#show&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#close&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    
&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;
      &lt;a class=&quot;highlight-module__cta&quot; href=&quot;/samples/dialog/index.html&quot; target=&quot;_blank&quot;&gt;View full sample&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;p&gt;Check out more sample codes and how it works in detail with &lt;a href=&quot;http://demo.agektmr.com/dialog/&quot;&gt;a live demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are a few changes applied to the implementation since &lt;a href=&quot;http://updates.html5rocks.com/2013/09/dialog-element-Modals-made-easy&quot;&gt;the last announcement&lt;/a&gt; but notable one is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Non-modal &amp;lt;dialog&amp;gt; is no longer vertically centered in the viewport. It has no special positioning behavior beyond its default CSS styling.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are curious about further details on the spec update, check out diffs &lt;a href=&quot;http://html5.org/r/8448&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://html5.org/r/8457&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Jul 2014 00:00:00 +0100</pubDate>
        <link>/2014/07/dialog-element-shipped-in-Chrome-37-Beta</link>
        <guid isPermaLink="true">/2014/07/dialog-element-shipped-in-Chrome-37-Beta</guid>
        
        <category>dialog</category>
        
        <category>semantics</category>
        
        
      </item>
    
      <item>
        <title>Blob support for IndexedDB landed on Chrome Dev</title>
        <description>&lt;p&gt;Chrome Dev has landed support for Blob on IndexedDB.&lt;/p&gt;

&lt;p&gt;This is a long awaited feature for Chrome that allows IndexedDB API to be able to store and retrieve a Blob without converting it to a Base64 string.&lt;/p&gt;

&lt;p&gt;IndexedDB provides large scale key-value type persistent storage that is available on most of modern browsers (Safari apparently will land support in iOS8 and Mac OS X 10.10). Check out &lt;a href=&quot;http://caniuse.com/#search=indexeddb&quot;&gt;its implementation status&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Blob is a file-like binary object modern JavaScript engines can handle. File objects inherits from Blob. You can also fetch images and files as Blob via XMLHttpRequest. Check out &lt;a href=&quot;http://caniuse.com/#search=blob&quot;&gt;its implementation status&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;storing-a-blob-on-indexeddb&quot;&gt;Storing a Blob on IndexedDB&lt;/h2&gt;
&lt;p&gt;There is no way to feature detect the Blob availability in IndexedDB. You basically have to try-catch then use string instead of Blob if it is not available. Here’s some sample code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Create an example Blob object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blob object&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;entries&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;readwrite&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;objectStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;entries&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Store the object  &lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;blob&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onsuccess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Successfully stored a blob as Blob.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// After exception, you have to start over from getting transaction.&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;entries&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;readwrite&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;objectStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;entries&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Obtain DataURL string&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;blob&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onsuccess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Successfully stored a blob as String.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Convert Blob into DataURL string&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readAsDataURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Blob support for IndexedDB is already available on Firefox and Internet Explorer as well. Safari support needs to be investigated.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Jul 2014 00:00:00 +0100</pubDate>
        <link>/2014/07/Blob-support-for-IndexedDB-landed-on-Chrome-Dev</link>
        <guid isPermaLink="true">/2014/07/Blob-support-for-IndexedDB-landed-on-Chrome-Dev</guid>
        
        <category>indexeddb</category>
        
        <category>blob</category>
        
        
      </item>
    
      <item>
        <title>Automating Web Performance Measurement</title>
        <description>&lt;p&gt;Web performance can have a huge impact on your &lt;a href=&quot;http://programming.oreilly.com/2014/01/web-performance-is-user-experience.html&quot;&gt;entire&lt;/a&gt; user experience. If you’ve been looking at improving your own site’s perf lately, you’ve probably heard of &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;PageSpeed Insights&lt;/a&gt; - a tool that analyzes pages and offers advice on how to make them faster based on best practices for mobile and desktop web performance.&lt;/p&gt;

&lt;p&gt;PageSpeed’s scores are based on a number of factors, including how well your scripts are minimized, images optimized, content gzipped, tap targets being appropriately sized and landing page redirects avoided.&lt;/p&gt;

&lt;p&gt;With &lt;a href=&quot;http://www.akamai.com/html/about/press/releases/2009/press_091409.html&quot;&gt;40%&lt;/a&gt; of people potentially abandoning pages that take more than 3 seconds to load, caring about how quickly your pages load on your users devices is increasingly becoming an essential part of our development workflow.&lt;/p&gt;

&lt;h2 id=&quot;performance-metrics-in-your-build-process&quot;&gt;Performance metrics in your build process&lt;/h2&gt;

&lt;p&gt;Although manually going to the &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;PageSpeed Insights&lt;/a&gt; to find out how your scores is fine, a number of developers have been asking whether it’s possible to get similar performance scoring into their build process.&lt;/p&gt;

&lt;p&gt;The answer is: absolutely.&lt;/p&gt;

&lt;h2 id=&quot;introducing-psi-for-node&quot;&gt;Introducing PSI for Node&lt;/h2&gt;

&lt;p&gt;Today we’re happy to introduce &lt;a href=&quot;https://github.com/addyosmani/psi/&quot;&gt;PSI&lt;/a&gt; for Node - a new module that works great with &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;, &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; and other build systems and can connect up to the PageSpeed Insights service and return a detailed report of your web performance. Let’s look at a preview of the type of reporting it enables:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/1ub50lI.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The results above are good for getting a feel for the type of improvements that could be made. For example, a 5.92 for sizing content to viewport means “some” work can still be done whilst a 24 for minimizing render blocking resources may suggest you need to defer loading of JS using the &lt;code&gt;async&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h3 id=&quot;lowering-the-barrier-of-entry-to-pagespeed-insights&quot;&gt;Lowering the barrier of entry to PageSpeed Insights&lt;/h3&gt;

&lt;p&gt;If you’ve tried using the PageSpeed Insights API in the past or attempted to use any of the tools we build on top of it, you probably had to register for a dedicated API key. We know that although this just takes a few minutes, it can be a turn off for getting Insights as part of your regular workflow.&lt;/p&gt;

&lt;p&gt;We’re happy to inform you that the PageSpeed Insights service supports making requests without an API key for up to 1 request every 5 seconds (plenty for anyone). For more regular usage or serious production builds, you’ll probably want to register for a key.&lt;/p&gt;

&lt;p&gt;The PSI module supports both a &lt;code&gt;nokey&lt;/code&gt; option for getting it setup in less than a few minutes and the &lt;code&gt;key&lt;/code&gt; option for a little longer. Details on how to register for an &lt;a href=&quot;https://developers.google.com/speed/docs/insights/v1/getting_started#auth&quot;&gt;API key&lt;/a&gt; are documented.&lt;/p&gt;

&lt;h3 id=&quot;getting-started&quot;&gt;Getting started&lt;/h3&gt;

&lt;p&gt;You have two options for how you integrate PSI into your workflow. You can either integrate it into your build process or run it as a globally installed tool on your system.&lt;/p&gt;

&lt;h3 id=&quot;build-process&quot;&gt;Build process&lt;/h3&gt;

&lt;p&gt;Using PSI in your Grunt or Gulp build-process is fairly straight-forward. If you’re working on a Gulp project, you can install and use PSI directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install PSI using npm and pass &lt;code&gt;--save-dev&lt;/code&gt; to save it to your package.json file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install psi --save-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then define a Gulp task for it in your gulpfile as follows (also covered in our Gulp &lt;a href=&quot;https://github.com/addyosmani/psi-gulp-sample&quot;&gt;sample&lt;/a&gt; project):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;psi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;psi&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;psi&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;nokey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// or use key: ‘YOUR_API_KEY’&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;mobile&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For the above, you can then run the task using:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gulp psi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And if you’re using Grunt, you can use &lt;a href=&quot;https://github.com/jrcryer/grunt-pagespeed&quot;&gt;grunt-pagespeed&lt;/a&gt; by James Cryer which now uses PSI to power it’s reporting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install grunt-pagespeed --save-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then load the task in your Gruntfile:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;grunt-pagespeed&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and configure it for use:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;pagespeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;nokey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://www.html5rocks.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;mobile&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can then run the task using:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;grunt pagespeed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;installing-as-a-global-tool&quot;&gt;Installing as a global tool&lt;/h3&gt;

&lt;p&gt;You can also  install PSI as a globally available tool on your system. Once again, we can use npm to install the tool:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install -g psi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And via any terminal window, request PageSpeed Insights reports for a site (with the &lt;code&gt;nokey&lt;/code&gt; option or an API specific &lt;code&gt;key&lt;/code&gt; as follows):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;psi http://www.html5rocks.com --nokey --strategy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mobile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or for those with a registered API key:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;psi http://www.html5rocks.com --key&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YOUR_API_KEY --strategy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mobile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s it!&lt;/p&gt;

&lt;h2 id=&quot;go-forth-and-make-performance-part-of-your-culture&quot;&gt;Go forth and make performance part of your culture&lt;/h2&gt;

&lt;p&gt;We need to start thinking more about the impact of our designs and implementations on user experience.&lt;/p&gt;

&lt;p&gt;Solutions like PSI can keep an eye on your web performance on desktop and mobile and are useful when used as part of your regular post-deployment workflow.&lt;/p&gt;

&lt;p&gt;We’re eager to hear of any feedback you might have and hope PSI helps improve the performance culture on your team.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Jun 2014 00:00:00 +0100</pubDate>
        <link>/2014/06/Automating-Web-Performance-Measurement</link>
        <guid isPermaLink="true">/2014/06/Automating-Web-Performance-Measurement</guid>
        
        <category>gulp</category>
        
        <category>performance</category>
        
        <category>pagespeed</category>
        
        <category>node</category>
        
        <category>build-process</category>
        
        
      </item>
    
      <item>
        <title>Web Animations - element.animate() is now in Chrome 36</title>
        <description>&lt;p&gt;Animation on the web was once the province of JavaScript, but as the world moved to mobile, animations moved to CSS for the declarative syntax and the optimizations browsers were able to make with it. With 60fps on mobile always your goal, it makes sense to never step outside of what browsers know how to efficiently display.&lt;/p&gt;

&lt;p&gt;More tools are appearing to make JavaScript-driven animations more efficient, but the holy grail is a unification of &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/speed/high-performance-animations/#toc-imperative-declarative&quot;&gt;declarative and imperative animations&lt;/a&gt; , where the decision of how to write your animations is based on what’s the clearest code, not what is possible in one form and not in the other.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.w3.org/fxtf/web-animations/&quot;&gt;Web Animations&lt;/a&gt; stand to answer that call, and the first part of it has landed in Chrome 36 in the form of &lt;code&gt;element.animate()&lt;/code&gt;. This new function lets you create an animation purely in JavaScript and have it run as efficiently as any CSS Animation or Transition (in fact, as of Chrome 34, &lt;a href=&quot;http://updates.html5rocks.com/2013/12/New-Web-Animations-engine-in-Blink-drives-CSS-Animations-Transitions&quot;&gt;the exact same Web Animations engine drives all of these methods&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The syntax is simple, and its parts should be familiar to you if you’ve ever written a CSS Transition or Animation:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cssProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeInMs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iterationCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delayValue&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The biggest advantage of this new function is the elimination of a lot of awkward hoops we formerly had to jump through to get a smooth, jank-free animation.&lt;/p&gt;

&lt;p&gt;As an example, for &lt;a href=&quot;http://www.google.co.uk/santatracker/&quot;&gt;Santa Tracker&lt;/a&gt; last year, we wanted to have snow falling continuously, and we decided to animate it via CSS so that it could be &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/speed/high-performance-animations/&quot;&gt;done so efficiently&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, we wanted to pick the snow’s horizontal position dynamically based on screen and events going on in the scene itself, and of course the height of the snow’s fall (the height of the user’s browser window) wouldn’t be known until we were actually running. This meant we really had to use CSS Transitions, as authoring a CSS Animation at runtime gets complex quickly (and hundreds of snowflakes means hundreds of new styling rules).&lt;/p&gt;

&lt;p&gt;So we took the following approach, which should be familiar:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, -100%)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// wait a frame&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transitionProperty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;transform&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transitionDuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1500ms&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The key is in that ‘wait a frame’ comment. In order to successfully start a transition, the browser has to acknowledge that the element is in the starting position. There are a few ways to do this. One of the most common ways is to read from one of the element properties that forces the browser to compute layout, thereby ensuring it knows that the element has a starting position before transitioning to the ending position. Using this method allows you to congratulate yourself on your superior knowledge of browser internals while still feeling dirty with every keystroke.&lt;/p&gt;

&lt;p&gt;In contrast, the equivalent &lt;code&gt;element.animate()&lt;/code&gt; call couldn’t be more clear, saying exactly what is intended:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, -100%)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are many more options. Just like with its CSS counterparts, Web Animations can be delayed and iterated:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, -100%)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;AnimationPlayer&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;element.animate()&lt;/code&gt; actually returns an AnimationPlayer object, which will become increasingly important as more of the Web Animations spec is launched. Both JavaScript- and CSS-created animations will have associated AnimationPlayers, allowing them to be seamlessly combined in useful and interesting ways.&lt;/p&gt;

&lt;p&gt;For now, though, AnimationPlayer only has two pieces of functionality, both very useful. You can cancel an animation at any time by using &lt;code&gt;AnimationPlayer.cancel()&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, -100%)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// less than 1500ms later...changed my mind&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And, to the relief of everyone who has attempted to build an animation system around CSS Animations or Transitions in the past, Web Animations always fire an event when they’re finished:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowFlake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, -100%)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;translate(&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;snowLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px, &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onfinish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;per aspera ad terra!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Try it out&lt;/h2&gt;

&lt;p&gt;This is all shipping in Chrome 36, moving to beta today! If you’d like to try it, try working with the native implementation in Chrome 36. However, there is a &lt;a href=&quot;https://github.com/web-animations/web-animations-js&quot;&gt;Web Animations polyfill&lt;/a&gt;, which brings a significantly larger part of the full Web Animations specification to any of the modern, evergreen browsers.&lt;/p&gt;

&lt;p&gt;A demo of the snow effect is available for you to try using both the &lt;a href=&quot;http://jsbin.com/novuf/1/watch?js,output&quot;&gt;native&lt;/a&gt; version of &lt;code&gt;element.animate()&lt;/code&gt; and the &lt;a href=&quot;http://jsbin.com/rewev/2/watch?html,js,output&quot;&gt;polyfill&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Let us know what you think&lt;/h2&gt;

&lt;p&gt;Really, though, this is a preview of what’s to come, and is being released specifically to get developer feedback right away. We’re not sure yet if we’ve hit every use case, or sanded down every rough edge of the current APIs for animation. The only way for us to know and to really get this right is for developers to try it out and let us know what they think.&lt;/p&gt;

&lt;p&gt;Comments on this post are of course valuable, and comments on the standard itself can be addressed to the CSS and SVG Working Groups via the &lt;a href=&quot;http://lists.w3.org/Archives/Public/public-fx/&quot;&gt;public-fx mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to Addy Osmani and Max Heinritz for their assistance with this post.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 22 May 2014 00:00:00 +0100</pubDate>
        <link>/2014/05/Web-Animations---element-animate-is-now-in-Chrome-36</link>
        <guid isPermaLink="true">/2014/05/Web-Animations---element-animate-is-now-in-Chrome-36</guid>
        
        <category>element.animate</category>
        
        <category>Web Animations</category>
        
        <category>animations</category>
        
        
      </item>
    
      <item>
        <title>A More Compatible, Smoother Touch</title>
        <description>&lt;p&gt;You and your users want mobile web apps that react and scroll smoothly to the 
touch. Developing them &lt;a href=&quot;https://developers.google.com/web/fundamentals/documentation/user-input/touch-input/&quot;&gt;should be easy&lt;/a&gt; but, unfortunately, how mobile web 
browsers react to touch events during scrolling is left as an implementation 
detail in the &lt;a href=&quot;http://www.w3.org/TR/touch-events/&quot;&gt;TouchEvent&lt;/a&gt; specification. As 
a result, approaches can be broken down roughly into 4 categories. This 
situation exposes a fundamental tension between delivering scroll smoothness and 
maintaining developer control. &lt;/p&gt;

&lt;h2 id=&quot;four-different-models-of-touch-event-processing&quot;&gt;Four different models of touch event processing?&lt;/h2&gt;

&lt;p&gt;The behavior differences between the browsers break down into four models.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Normal synchronous event processing&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Touchmove events are sent during scrolling and each scroll update blocks until touchmove handling has completed. This is good as the simplest to understand and the most powerful but bad for scroll performance because it means that each frame during the scroll must block on the main thread.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Browsers: Android Browser (Android 4.0.4, 4.3), Mobile Safari (when 
   scrolling div)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Asynchronous touchmove processing&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Touchmove events are sent during scrolling, but scrolling can proceed asynchronously (the touchmove event is ignored after scrolling has begun). This can result in “double handling” of events, for example, continuing to  scroll after the web site does something with the touchmove and calls &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault&quot;&gt;preventDefault&lt;/a&gt; on the event, telling the browser not to handle it.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Browsers: Mobile Safari (when scrolling Document), Firefox&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Touchmove suppressed while scrolling&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Touchmove events are not sent after scrolling starts and do not resume until after the touchend event. In this model, it’s hard to tell the difference between a stationary touch and a scroll.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Browsers: Samsung Browser (mousemove events sent)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Touchcancel on scroll start&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;You can’t have it both ways – scroll smoothness and developer control – and this model makes clear the trade-off between smooth scrolling and event handling, similar to the semantics of the &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events&lt;/a&gt; specification. Some experiences that may need to track the finger, like pull-to-refresh, are not possible.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Browsers: Chrome Desktop M32+, Chrome Android&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;why-change&quot;&gt;Why Change?&lt;/h2&gt;

&lt;p&gt;Chrome for Android currently uses Chrome’s Old Model: touchcancel on scroll 
start, which enhances scrolling performance, but leads to developer confusion. 
In particular, some developers aren’t aware of the touchcancel event or how to 
deal with it, and this has caused some web sites to break. More importantly, an 
entire class of UI scrolling effects and behaviors, such as &lt;strong&gt;pull-to-refresh&lt;/strong&gt;, 
&lt;strong&gt;hidey bars&lt;/strong&gt;, and &lt;strong&gt;snap points&lt;/strong&gt; are difficult or impossible to implement 
well.&lt;/p&gt;

&lt;p&gt;Rather than adding specifically hardcoded features to support these effects, 
Chrome aims to concentrate on adding platform primitives that allow developers 
to implement these effects directly. See &lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/4jBAnIVwrt0&quot;&gt;A Rational Web 
Platform&lt;/a&gt; 
for a general exposition of this philosophy.&lt;/p&gt;

&lt;h2 id=&quot;chromes-new-model-the-throttled-async-touchmove-model&quot;&gt;Chrome’s New Model: The Throttled Async Touchmove Model&lt;/h2&gt;

&lt;p&gt;Chrome is introducing &lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/wHnyukcYBcA&quot;&gt;a new 
behavior&lt;/a&gt; 
designed to improve compatibility with code written for other browsers when 
scrolling, as well as enabling other scenarios that depend on getting touchmove 
events while scrolling. This feature is enabled by default and you can turn it 
off with the following flag,  &lt;strong&gt;chrome://flags#touch-scrolling-mode&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The new behavior is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;first&lt;/strong&gt; touchmove is sent &lt;strong&gt;synchronously&lt;/strong&gt; to allow scroll to be 
&lt;strong&gt;canceled&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;During active scrolling
    &lt;ul&gt;
      &lt;li&gt;touchmove events are sent &lt;strong&gt;asynchronously&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;throttled&lt;/strong&gt; to 1 event per &lt;strong&gt;200ms&lt;/strong&gt;, or if a CSS &lt;strong&gt;15px&lt;/strong&gt; slop region 
is exceeded&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Event.cancelable&lt;/strong&gt; is &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Otherwise, touchmove events fire synchronously as normal when active scrolling 
terminates or isn’t possible because the scroll limit has been hit&lt;/li&gt;
  &lt;li&gt;A touchend event &lt;strong&gt;always&lt;/strong&gt; occurs when the user lifts their finger&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can try this &lt;a href=&quot;http://www.rbyers.net/touchevent-scroll.html&quot;&gt;demo&lt;/a&gt; in Chrome for Android and toggle the 
chrome://flags#touch-scrolling-mode flag to see the difference.&lt;/p&gt;

&lt;h2 id=&quot;let-us-know-what-you-think&quot;&gt;Let us know what you think&lt;/h2&gt;

&lt;p&gt;The Async Touchmove Model has the potential to improve cross-browser 
compatibility and enable a new class of touch gesture effects. We’re interested 
in hearing what developers think, and in seeing the creative things you can do 
with it. &lt;/p&gt;
</description>
        <pubDate>Wed, 21 May 2014 00:00:00 +0100</pubDate>
        <link>/2014/05/A-More-Compatible-Smoother-Touch</link>
        <guid isPermaLink="true">/2014/05/A-More-Compatible-Smoother-Touch</guid>
        
        <category>mobile</category>
        
        <category>Touch</category>
        
        <category>TouchEvent</category>
        
        
      </item>
    
      <item>
        <title>Get on the CSS Grid!</title>
        <description>&lt;p&gt;When building a Web Application, one of the first things that’s needed is a way to lay out the content of your app.&lt;/p&gt;

&lt;p&gt;Lots of designers use imaginary grids to lay out content, whether it’s for a site or app. The CSS group has been working hard to make layouts easier, and as part of that have produced the &lt;a href=&quot;http://www.w3.org/TR/css-grid-1/&quot;&gt;CSS Grid Layout Module&lt;/a&gt; which is now emerging in browsers.&lt;/p&gt;

&lt;p&gt;This feature is available to try out in Chrome behind an experimental flag. It’s also implemented in IE since version 10, and likely to be in most browsers soon.&lt;/p&gt;

&lt;h3 id=&quot;executive-summary&quot;&gt;Executive summary&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CSS Grid Layout lets you define rows and columns for your layout&lt;/li&gt;
  &lt;li&gt;Grids can adapt to make use of available space&lt;/li&gt;
  &lt;li&gt;Content order can be independent from grid container display order&lt;/li&gt;
  &lt;li&gt;Layouts can change based on media queries, making responsive design easier&lt;/li&gt;
  &lt;li&gt;Content can overlap (enabling layout that’s impossible with other methods)&lt;/li&gt;
  &lt;li&gt;Grid Layout is fast&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s an overview video that explains a lot about how CSS Grid Layout works (&lt;a href=&quot;http://sydcss-grid.appspot.com/&amp;quot;&amp;quot;&quot;&gt;slides are here&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/hy7IMGVUHps &quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;h3 id=&quot;try-it-out&quot;&gt;Try it out&lt;/h3&gt;

&lt;p&gt;Using CSS Grid Layout in Chrome now is easy. First thing you need to do is turn on the experimental flag to enable the feature.&lt;/p&gt;

&lt;p&gt;First load the &lt;em&gt;chrome://flags&lt;/em&gt; URL and scroll down to the option to &lt;em&gt;Enable experimental Web Platform features&lt;/em&gt; as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sydcss-grid.appspot.com/images/enable-flag.png&quot; alt=&quot;Image of experimental flag option&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just click &lt;em&gt;Enable&lt;/em&gt; to turn the flag on, and you should see a prompt to restart the browser that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sydcss-grid.appspot.com/images/enable-relaunch.png&quot; alt=&quot;Image of Relaunch button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now just click the &lt;em&gt;Relaunch Now&lt;/em&gt; button to restart your browser and you’ll be all set to try out CSS Grid Layout.&lt;/p&gt;

&lt;h3 id=&quot;let-us-know-what-you-think&quot;&gt;Let us know what you think&lt;/h3&gt;

&lt;p&gt;CSS Grid Layout is a great new primitive for web content, but as usual we’re all keen to hear what developers think about it. There are lots of ways to give feedback - leave a comment here, send mail to the &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#119;&amp;#119;&amp;#119;&amp;#045;&amp;#115;&amp;#116;&amp;#121;&amp;#108;&amp;#101;&amp;#064;&amp;#119;&amp;#051;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&quot;&gt;W3C CSS Working Group list&lt;/a&gt; with “[css-grid]” in the subject line, log bugs, or blog and tweet what you think of it. We look forward to seeing the great layouts you build with this super useful new feature.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
        <link>/2014/03/Get-on-the-CSS-Grid</link>
        <guid isPermaLink="true">/2014/03/Get-on-the-CSS-Grid</guid>
        
        <category>layout</category>
        
        <category>CSS</category>
        
        <category>grids</category>
        
        
      </item>
    
  </channel>
</rss>
